/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rundown_v1;

import com.illposed.osc.OSCListener;
import com.illposed.osc.OSCMessage;
import com.illposed.osc.OSCPortIn;
import java.io.IOException;
import java.net.SocketException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import net.proteanit.sql.DbUtils;




/**
 *
 * @author DeeptoTV
 */
public class RundownView extends javax.swing.JFrame {

    /**
     * Creates new form RundownView
     */
    int receiverPort_secondary = 8250;
    int receiverPort_primary = 7250;
    
    OSCPortIn receiver_secondary = new OSCPortIn(receiverPort_secondary);
    OSCPortIn receiver_primary = new OSCPortIn(receiverPort_primary);
    
    public RundownView() throws java.net.SocketException{
        initComponents();
        
    }

    Connection conn_primary = null;
    Connection conn_secondary = null;
    Connection conn_scheduler = null;
    CallableStatement stored_pro = null;
    Statement statement1 = null; 
    ResultSet rs = null;
    float nextLiveTime_primary = 0;
    float previous_timer_primary=0;
    float nextLiveTime_secondary = 0;
    float previous_timer_secondary=0;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public Connection getSchedulerConnection()
    {
        return conn_scheduler; 
    }
    public Connection getPrimaryConnection()
    {
        return conn_primary; 
    }
    public Connection getSecondaryConnection()
    {
        return conn_secondary; 
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        primary_database_table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        videoName_primary = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        remainTime_primary = new javax.swing.JLabel();
        timerProgress_primary = new javax.swing.JProgressBar();
        nextLive_countdown_primary = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        secondary_database_table = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        videoName_secondary = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        remainTime_secondary = new javax.swing.JLabel();
        timerProgress_secondary = new javax.swing.JProgressBar();
        nextLive_secondary = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        onair = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        backUpDatabase = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        MenuShowPrimaryRundown = new javax.swing.JMenuItem();
        MenuShowSecondaryRundown = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CasparCG RunDown");
        setBackground(new java.awt.Color(0, 153, 153));
        setFont(new java.awt.Font("Aachen BT", 1, 14)); // NOI18N
        setForeground(new java.awt.Color(0, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setBackground(new java.awt.Color(255, 51, 51));
        jLabel9.setFont(new java.awt.Font("Algerian", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 204, 204));
        jLabel9.setText("                   Primary Rundown");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        primary_database_table.setBackground(new java.awt.Color(0, 51, 51));
        primary_database_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        primary_database_table.setForeground(new java.awt.Color(255, 255, 255));
        primary_database_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Start Time", "Type", "Program Name", "state"
            }
        ));
        primary_database_table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        primary_database_table.setGridColor(new java.awt.Color(51, 51, 51));
        primary_database_table.setShowHorizontalLines(false);
        primary_database_table.setShowVerticalLines(false);
        primary_database_table.setSurrendersFocusOnKeystroke(true);
        primary_database_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                primary_database_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(primary_database_table);
        if (primary_database_table.getColumnModel().getColumnCount() > 0) {
            primary_database_table.getColumnModel().getColumn(1).setMinWidth(10);
            primary_database_table.getColumnModel().getColumn(1).setPreferredWidth(20);
            primary_database_table.getColumnModel().getColumn(1).setMaxWidth(20);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        videoName_primary.setBackground(new java.awt.Color(153, 153, 255));
        videoName_primary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        videoName_primary.setForeground(new java.awt.Color(255, 255, 255));
        videoName_primary.setText("Video Name");
        videoName_primary.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(0, 204, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Video Name");

        jLabel4.setBackground(new java.awt.Color(0, 204, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Time Remain");

        remainTime_primary.setBackground(new java.awt.Color(153, 153, 255));
        remainTime_primary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remainTime_primary.setForeground(new java.awt.Color(255, 255, 255));
        remainTime_primary.setText("00:00:00");
        remainTime_primary.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        timerProgress_primary.setForeground(new java.awt.Color(0, 153, 0));
        timerProgress_primary.setStringPainted(true);

        nextLive_countdown_primary.setBackground(new java.awt.Color(204, 0, 0));
        nextLive_countdown_primary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nextLive_countdown_primary.setForeground(new java.awt.Color(204, 0, 0));
        nextLive_countdown_primary.setText("00:00:00");
        nextLive_countdown_primary.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setBackground(new java.awt.Color(0, 204, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Next Live");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(remainTime_primary, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(timerProgress_primary, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(videoName_primary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(nextLive_countdown_primary, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(videoName_primary, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(remainTime_primary, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timerProgress_primary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextLive_countdown_primary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        secondary_database_table.setBackground(new java.awt.Color(0, 51, 51));
        secondary_database_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        secondary_database_table.setForeground(new java.awt.Color(255, 255, 255));
        secondary_database_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Start Time", "Type", "Program Name", "state"
            }
        ));
        secondary_database_table.setGridColor(new java.awt.Color(0, 51, 51));
        secondary_database_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                secondary_database_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(secondary_database_table);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel10.setBackground(new java.awt.Color(51, 204, 0));
        jLabel10.setFont(new java.awt.Font("Algerian", 3, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 153, 0));
        jLabel10.setText("Secondary Rundown");

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        videoName_secondary.setBackground(new java.awt.Color(153, 153, 255));
        videoName_secondary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        videoName_secondary.setForeground(new java.awt.Color(255, 255, 255));
        videoName_secondary.setText("Video Name");
        videoName_secondary.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setBackground(new java.awt.Color(0, 204, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Video Name");

        jLabel8.setBackground(new java.awt.Color(0, 204, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Time Remain");

        remainTime_secondary.setBackground(new java.awt.Color(153, 153, 255));
        remainTime_secondary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remainTime_secondary.setForeground(new java.awt.Color(255, 255, 255));
        remainTime_secondary.setText("00:00:00");
        remainTime_secondary.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        timerProgress_secondary.setForeground(new java.awt.Color(0, 153, 0));
        timerProgress_secondary.setStringPainted(true);

        nextLive_secondary.setBackground(new java.awt.Color(204, 0, 0));
        nextLive_secondary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nextLive_secondary.setForeground(new java.awt.Color(204, 0, 0));
        nextLive_secondary.setText("00:00:00");
        nextLive_secondary.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setBackground(new java.awt.Color(0, 204, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Next Live");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(videoName_secondary, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nextLive_secondary, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(remainTime_secondary, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addComponent(timerProgress_secondary, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(250, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(videoName_secondary, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remainTime_secondary, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timerProgress_secondary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextLive_secondary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(51, 204, 0));
        jButton1.setText("Start");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        onair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/onair.gif"))); // NOI18N

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout.png"))); // NOI18N
        jButton2.setText("  Log Out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tools");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        backUpDatabase.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        backUpDatabase.setText("BackUp Database");
        backUpDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backUpDatabaseActionPerformed(evt);
            }
        });
        jMenu3.add(backUpDatabase);

        jMenuItem1.setText("Exit Live");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Rundown");

        MenuShowPrimaryRundown.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        MenuShowPrimaryRundown.setText("Show Primary Rundown");
        MenuShowPrimaryRundown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuShowPrimaryRundownActionPerformed(evt);
            }
        });
        jMenu4.add(MenuShowPrimaryRundown);

        MenuShowSecondaryRundown.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        MenuShowSecondaryRundown.setText("Show Secondary Rundown");
        MenuShowSecondaryRundown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuShowSecondaryRundownActionPerformed(evt);
            }
        });
        jMenu4.add(MenuShowSecondaryRundown);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(onair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(onair, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        conn_primary = ConnectDB_primary.connectDb();
        conn_secondary = ConnectDB_secondary.connectDb();
        conn_scheduler = ConnectDB_scheduler.connectDb();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        //========================
       try {
            // TODO add your handling code here:
            statement1 = conn_primary.createStatement();
            rs = statement1.executeQuery("SELECT timecode FROM playlist_1 WHERE starttime < (SELECT starttime FROM playlist_1 WHERE label LIKE  'LIVE_%' and state = 0 LIMIT 1 ) and state in(0,1)");

            while(rs.next())
            {
                String timecode = rs.getString("timecode");
                String[] words=timecode.split(":");//splits the string based on string
                //using java foreach loop to print elements of string array
                float hrToSec = Float.parseFloat(words[0])*60*60;
                float minToSec = Float.parseFloat(words[1])*60;
                float Sec = Float.parseFloat(words[2]);
                float frameToSec = Float.parseFloat(words[3])/25;
                float TotalSec = hrToSec + minToSec + Sec + frameToSec;
                nextLiveTime_primary = nextLiveTime_primary + TotalSec;

            }
        }catch(Exception e)
        {
        }
       
       //=============================================
       try {
            // TODO add your handling code here:
            statement1 = conn_secondary.createStatement();
            rs = statement1.executeQuery("SELECT timecode FROM playlist_1 WHERE starttime < (SELECT starttime FROM playlist_1 WHERE label LIKE  'LIVE_%' and state = 0 LIMIT 1 ) and state in(0,1)");

            while(rs.next())
            {
                String timecode = rs.getString("timecode");
                String[] words=timecode.split(":");//splits the string based on string
                //using java foreach loop to print elements of string array
                float hrToSec = Float.parseFloat(words[0])*60*60;
                float minToSec = Float.parseFloat(words[1])*60;
                float Sec = Float.parseFloat(words[2]);
                float frameToSec = Float.parseFloat(words[3])/25;
                float TotalSec = hrToSec + minToSec + Sec + frameToSec;
                nextLiveTime_secondary = nextLiveTime_secondary + TotalSec;

            }
        }catch(Exception e)
        {
        }
       //===================================================================
       
       
       //=========================
        // ========  Secondary OSC handler =================================================//
        OSCListener getVideoName_secondary = new OSCListener() {
            public void acceptMessage(java.util.Date time, OSCMessage message) {

                Object[] values = message.getArguments();

                videoName_secondary.setText(values[0].toString());

            }
        };
        OSCListener getDuration_secondary = new OSCListener() {
            
            float seconds_nextLive;
            int checkProgramChange = 0;
            public void acceptMessage(java.util.Date time, OSCMessage message) {
                String msg ="";
                String msg2 ="";
                float timer1 = 0, duration=0;
                int progress = 0;
                //System.out.println("Handler2 called with address  " + message.getAddress());

                // Print out values
                Object[] values = message.getArguments();
                // msg = values[0].toString();

                //out.println("Values: [%s"+values[0]);
                msg = values[0].toString();
                msg2= values[1].toString();
                timer1 = Float.parseFloat(msg);
                duration = Float.parseFloat(msg2);
                progress = (int) ((timer1*100)/duration);
                
                //================================
                if((previous_timer_secondary - timer1) > 0)
                {
                    previous_timer_secondary = 0;
                }
                nextLiveTime_secondary = nextLiveTime_secondary + previous_timer_secondary - timer1;
                previous_timer_secondary = timer1;
                
                //====================seconds to HH:mm:ss convert===============//
                //seconds_nextLive = nextLiveTime_secondary;

                int hours_nextLive = (int) (nextLiveTime_secondary / 3600),
                remainder_nextLive = (int) (nextLiveTime_secondary % 3600),
                minutes_nextLive = remainder_nextLive / 60,
                second_nextLive = remainder_nextLive % 60;
                //=============================================================

                nextLive_secondary.setText(hours_nextLive+":"+minutes_nextLive+":"+second_nextLive);
                
                //=================================

                //====================seconds to HH:mm:ss convert===============//
                float seconds = duration-timer1;

                int hours = (int) (seconds / 3600),
                remainder = (int) (seconds % 3600),
                minutes = remainder / 60,
                second = remainder % 60;

                //=============================================================

                //timer_primary.setText(msg);
                //totalTime.setText(msg2);
                remainTime_secondary.setText(hours+":"+minutes+":"+second);
                timerProgress_secondary.setValue(progress);

            }
        };
        // ========  Secondary OSC handler =================================================//
        // ========  primary OSC handler =================================================//
        OSCListener getVideoName_primary = new OSCListener() {
            public void acceptMessage(java.util.Date time, OSCMessage message) {

                Object[] values = message.getArguments();

                videoName_primary.setText(values[0].toString());

            }
        };

        OSCListener getDuration_primary = new OSCListener() {
            
            float seconds_nextLive;
            int checkProgramChange = 1;
            public void acceptMessage(java.util.Date time, OSCMessage message) {
                String msg ="";
                String msg2 ="";
                float timer = 0, duration=0;
                int progress = 0;

                Object[] values = message.getArguments();

                msg = values[0].toString();
                msg2= values[1].toString();
                timer = Float.parseFloat(msg);
                duration = Float.parseFloat(msg2);
                progress = (int) ((timer*100)/duration);

                //================================
                if((previous_timer_primary  - timer) > 0)
                {   
                    
                    previous_timer_primary = 0;
                }
                nextLiveTime_primary = nextLiveTime_primary + previous_timer_primary - timer;
                previous_timer_primary = timer;
                
                //====================seconds to HH:mm:ss convert===============//
                //seconds_nextLive = nextLiveTime_primary;

                int hours_nextLive = (int) (nextLiveTime_primary / 3600),
                remainder_nextLive = (int) (nextLiveTime_primary % 3600),
                minutes_nextLive = remainder_nextLive / 60,
                second_nextLive = remainder_nextLive % 60;
                //=============================================================

                nextLive_countdown_primary.setText(hours_nextLive+":"+minutes_nextLive+":"+second_nextLive);
                
                //=================================
                //====================seconds to HH:mm:ss convert===============//
                float seconds = duration-timer;

                int hours = (int) (seconds / 3600),
                remainder = (int) (seconds % 3600),
                minutes = remainder / 60,
                second = remainder % 60;

                //=============================================================

                remainTime_primary.setText(String.valueOf(hours+":"+minutes+":"+second));
                timerProgress_primary.setValue(progress);

            }
        };
        
        
       
        
        
        

        // ========  primary OSC handler =================================================//
        receiver_secondary.addListener("/channel/1/stage/layer/10/file/path", getVideoName_secondary);
        receiver_secondary.addListener("/channel/1/stage/layer/10/file/time", getDuration_secondary);
        receiver_primary.addListener("/channel/1/stage/layer/10/file/path", getVideoName_primary);
        receiver_primary.addListener("/channel/1/stage/layer/10/file/time", getDuration_primary);
        

        receiver_secondary.startListening();
        receiver_primary.startListening();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void backUpDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backUpDatabaseActionPerformed
        // TODO add your handling code here:
        BackupDatabase backupdatabase = new BackupDatabase();
        backupdatabase.setVisible(true);
    }//GEN-LAST:event_backUpDatabaseActionPerformed

    private void primary_database_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_primary_database_tableMouseClicked
        // TODO add your handling code here:
        nextLiveTime_primary = 0;
        previous_timer_primary = 0;
        String selectedData = (String) primary_database_table.getValueAt(primary_database_table.getSelectedRow(), 0);
        
        float nextProgram = 0 , TotalSec = 0,frameToSec = 0,Sec = 0,minToSec = 0,hrToSec = 0,
                TotalSecStarttime = 0,TotalSecPlayedTime = 0,extra = 0;
        String scheduler_id = "";
        String timecode = "";
        String played_time = "",starttime = "",timeadjustmsg = "";
        String[] words;
        int state = 0;
        try {
            // TODO add your handling code here:
            statement1 = conn_primary.createStatement();
            rs = statement1.executeQuery("SELECT timecode FROM playlist_1 WHERE starttime < '"+selectedData+"' and state in(0,1)");

            while(rs.next())
            {
                 timecode = rs.getString("timecode");
                 words =timecode.split(":");//splits the string based on string
                //using java foreach loop to print elements of string array
                hrToSec = Float.parseFloat(words[0])*60*60;
                minToSec = Float.parseFloat(words[1])*60;
                Sec = Float.parseFloat(words[2]);
                frameToSec = Float.parseFloat(words[3])/25;
                TotalSec= hrToSec + minToSec + Sec + frameToSec;
                nextLiveTime_primary = nextLiveTime_primary + TotalSec;

            }
        }catch(Exception e)
        {
        }
         
        //=====================================================================
        try {
            // TODO add your handling code here:
            
            rs = statement1.executeQuery("SELECT scheduler_id,state FROM playlist_1 WHERE starttime = '"+selectedData+"'");

            while(rs.next())
            {
                 scheduler_id = rs.getString("scheduler_id");
                 state = Integer.parseInt(rs.getString("state"));
            }
        }catch(Exception e)
        {
        }
        
        if(state == 2 || state == 1)
        {
        try {
            // TODO add your handling code here:
            statement1 = conn_scheduler.createStatement();
            rs = statement1.executeQuery("SELECT played_time FROM primary_log WHERE scheduler_id = "+scheduler_id);

            while(rs.next())
            {
                 played_time = rs.getString("played_time");
            }
        }catch(Exception e)
        {
        }
            
        
         selectedData = selectedData.split(" ")[1];
         played_time = played_time.split(" ")[1];
         words = selectedData.split(":");
         hrToSec = Float.parseFloat(words[0])*60*60;
         minToSec = Float.parseFloat(words[1])*60;
         Sec = Float.parseFloat(words[2]);
         TotalSecStarttime= hrToSec + minToSec + Sec;
         words = played_time.split(":");
         hrToSec = Float.parseFloat(words[0])*60*60;
         minToSec = Float.parseFloat(words[1])*60;
         Sec = Float.parseFloat(words[2]);
         TotalSecPlayedTime= hrToSec + minToSec + Sec;
         extra = TotalSecPlayedTime - TotalSecStarttime;
         if(extra < 0)
         {
             timeadjustmsg = "Please insert program";
         }
         else if(extra > 0)
         {
             timeadjustmsg = "Please delete program";
         }
         int hours = (int) (extra / 3600),
                remainder = (int) (extra % 3600),
                minutes = remainder / 60,
                second = remainder % 60;
         
         
        JOptionPane.showMessageDialog(null,String.valueOf(hours+":"+minutes+":"+second)+"\n"+timeadjustmsg );
        } // if(state == 2) end
        
    }//GEN-LAST:event_primary_database_tableMouseClicked

    private void secondary_database_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_secondary_database_tableMouseClicked
        // TODO add your handling code here:
        nextLiveTime_secondary = 0;
        previous_timer_secondary = 0;
        String selectedData = (String) secondary_database_table.getValueAt(secondary_database_table.getSelectedRow(), 0);
        float nextProgram = 0 , TotalSec = 0,frameToSec = 0,Sec = 0,minToSec = 0,hrToSec = 0,
                TotalSecStarttime = 0,TotalSecPlayedTime = 0,extra = 0;;
        String timecode = "",scheduler_id = "";;
        String[] words;
        String played_time = "",starttime = "",timeadjustmsg = "";
        int state = 0;
        try {
            // TODO add your handling code here:
            statement1 = conn_primary.createStatement();
            rs = statement1.executeQuery("SELECT timecode FROM playlist_1 WHERE starttime < '"+selectedData+"' and state in(0,1)");

            while(rs.next())
            {
                 timecode = rs.getString("timecode");
                 words =timecode.split(":");//splits the string based on string
                //using java foreach loop to print elements of string array
                hrToSec = Float.parseFloat(words[0])*60*60;
                minToSec = Float.parseFloat(words[1])*60;
                Sec = Float.parseFloat(words[2]);
                frameToSec = Float.parseFloat(words[3])/25;
                TotalSec= hrToSec + minToSec + Sec + frameToSec;
                nextLiveTime_secondary = nextLiveTime_secondary + TotalSec;

            }
        }catch(Exception e)
        {
        }
       
          //=====================================================================
          
        try {
            // TODO add your handling code here:
            
            rs = statement1.executeQuery("SELECT scheduler_id,state FROM playlist_1 WHERE starttime = '"+selectedData+"'");

            while(rs.next())
            {
                 scheduler_id = rs.getString("scheduler_id");
                 state = Integer.parseInt(rs.getString("state"));
            }
        }catch(Exception e)
        {
        }
        
        if(state == 2 || state == 1)
        {
        try {
            // TODO add your handling code here:
            statement1 = conn_scheduler.createStatement();
            rs = statement1.executeQuery("SELECT played_time FROM secondary_log WHERE scheduler_id = "+scheduler_id);

            while(rs.next())
            {
                 played_time = rs.getString("played_time");
            }
        }catch(Exception e)
        {
        }
            
        
         selectedData = selectedData.split(" ")[1];
         played_time = played_time.split(" ")[1];
         words = selectedData.split(":");
         hrToSec = Float.parseFloat(words[0])*60*60;
         minToSec = Float.parseFloat(words[1])*60;
         Sec = Float.parseFloat(words[2]);
         TotalSecStarttime= hrToSec + minToSec + Sec;
         words = played_time.split(":");
         hrToSec = Float.parseFloat(words[0])*60*60;
         minToSec = Float.parseFloat(words[1])*60;
         Sec = Float.parseFloat(words[2]);
         TotalSecPlayedTime= hrToSec + minToSec + Sec;
         extra = TotalSecPlayedTime - TotalSecStarttime;
         if(extra < 0)
         {
             timeadjustmsg = "Please insert program";
         }
         else if(extra > 0)
         {
             timeadjustmsg = "Please delete program";
         }
         int hours = (int) (extra / 3600),
                remainder = (int) (extra % 3600),
                minutes = remainder / 60,
                second = remainder % 60;
         
         
        JOptionPane.showMessageDialog(null,String.valueOf(hours+":"+minutes+":"+second)+"\n"+timeadjustmsg );
        }
          
    }//GEN-LAST:event_secondary_database_tableMouseClicked

    private void MenuShowPrimaryRundownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuShowPrimaryRundownActionPerformed
        // TODO add your handling code here:
        class PrimaryData implements Runnable{
       
        @Override
        public void run() {
            while(true){
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        String today = dateFormat.format(date)+" 00:00:00";
                
        try {
            // TODO add your handling code here:
            statement1 = conn_primary.createStatement();
            String sql_query = "select starttime,label,name,(case when state = '2' then 'played'"
                    + "when state = '1' then 'Running'"
                    + "when state = '0' then 'Upcoming'"
                    + "end) as status from playlist_1 where timecode != '0:0:0:0' and starttime >= '"+today+"' order by starttime";
            rs = statement1.executeQuery(sql_query);
            RundownView.this.primary_database_table.setModel(DbUtils.resultSetToTableModel(rs));
            primary_database_table.setDefaultRenderer(Object.class, new MyTableRenderer());
            Thread.sleep(5000);
        }catch(Exception e)
        {
        }
        }
        }
        }
       Thread thread = new Thread(new PrimaryData());
		// The JVM exits when the only threads running are all daemon threads.
		thread.setDaemon(true);
		thread.start();
        
    }//GEN-LAST:event_MenuShowPrimaryRundownActionPerformed

    private void MenuShowSecondaryRundownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuShowSecondaryRundownActionPerformed
        // TODO add your handling code here:
         class SecondaryData implements Runnable{
       
        @Override
        public void run() {
            while(true){
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        String today = dateFormat.format(date)+" 00:00:00";
                
        try {
            // TODO add your handling code here:
            statement1 = conn_secondary.createStatement();
            String sql_query = "select starttime,label,name,(case when state = '2' then 'Played'"
                    + "when state = '1' then 'Running'"
                    + "when state = '0' then 'Upcoming'"
                    + "end) as status from playlist_1 where timecode != '0:0:0:0' and starttime >= '"+today+"' order by starttime";
            rs = statement1.executeQuery(sql_query);
            RundownView.this.secondary_database_table.setModel(DbUtils.resultSetToTableModel(rs));
            secondary_database_table.setDefaultRenderer(Object.class, new MyTableRenderer());
            Thread.sleep(5000);
        }catch(Exception e)
        {
        }
        }
        }
        }
       Thread thread = new Thread(new SecondaryData());
		// The JVM exits when the only threads running are all daemon threads.
		thread.setDaemon(true);
		thread.start();
    }//GEN-LAST:event_MenuShowSecondaryRundownActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        ExitLive exitlive;
        try {
            exitlive = new ExitLive();
            exitlive.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(RundownView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
        Login_form loginForm = new Login_form();
        loginForm.setLocation(300, 200);
        loginForm.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RundownView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RundownView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RundownView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RundownView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RundownView().setVisible(true);
                } catch (SocketException ex) {
                    Logger.getLogger(RundownView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuShowPrimaryRundown;
    private javax.swing.JMenuItem MenuShowSecondaryRundown;
    private javax.swing.JMenuItem backUpDatabase;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel nextLive_countdown_primary;
    private javax.swing.JLabel nextLive_secondary;
    private javax.swing.JLabel onair;
    private javax.swing.JTable primary_database_table;
    private javax.swing.JLabel remainTime_primary;
    private javax.swing.JLabel remainTime_secondary;
    private javax.swing.JTable secondary_database_table;
    private javax.swing.JProgressBar timerProgress_primary;
    private javax.swing.JProgressBar timerProgress_secondary;
    private javax.swing.JLabel videoName_primary;
    private javax.swing.JLabel videoName_secondary;
    // End of variables declaration//GEN-END:variables
}
