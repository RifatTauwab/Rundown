/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rundown_v1;

import java.awt.Color;
import java.net.SocketException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.UIManager;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author DeeptoTV
 */
public class BackupDatabase extends javax.swing.JFrame {

    /**
     * Creates new form BackupDatabase
     */
    public BackupDatabase() {
        initComponents();
        
    }
     Connection conn_scheduler = null;
    CallableStatement stored_pro = null;
    Statement statement1 = null; 
    ResultSet rs = null;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        backupScheduler = new javax.swing.JButton();
        schedule_backup_format = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        backup_primary_log = new javax.swing.JButton();
        primary_log_backup_format = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        backupScheduler.setText("BackUp Scheduler");
        backupScheduler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupSchedulerActionPerformed(evt);
            }
        });

        schedule_backup_format.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SQL", "CSV", "TEXT" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("select backup format");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backupScheduler)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(schedule_backup_format, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schedule_backup_format, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(backupScheduler, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        backup_primary_log.setText("BackUp primary Log");
        backup_primary_log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backup_primary_logActionPerformed(evt);
            }
        });

        primary_log_backup_format.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CSV", "SQL", "TEXT" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("select backup format");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backup_primary_log)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(primary_log_backup_format, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(primary_log_backup_format, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(backup_primary_log, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            
            
        
        
       
    }//GEN-LAST:event_formWindowOpened

    private void backupSchedulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupSchedulerActionPerformed
        // TODO add your handling code here:
        String sql = "",backup_dir = "";
         conn_scheduler = ConnectDB_scheduler.connectDb();
       
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd_hh_mm_ss");
        Date date = new Date();
        String today = dateFormat.format(date);
        String backup_format = (String)schedule_backup_format.getSelectedItem();
        if(backup_format.equalsIgnoreCase("sql"))
        {
          backup_dir = today+"_events_scheduler.sql";  
          sql = "SELECT * FROM events INTO OUTFILE '/u01/backup/"+backup_dir+"'";
        }
        else if(backup_format.equalsIgnoreCase("text"))
        {
          backup_dir = today+"_events_scheduler.txt";  
          sql = "SELECT * FROM events INTO OUTFILE '/u01/backup/"+backup_dir+"'";
        }
        else if(backup_format.equalsIgnoreCase("csv"))
        {
          backup_dir = today+"_events_scheduler.csv";  
          sql = "SELECT * FROM events INTO OUTFILE '/u01/backup/"+backup_dir+"' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n'";
        }
        else
        {
          backup_dir = today+"_events_scheduler.sql";  
          sql = "SELECT * FROM events INTO OUTFILE '/u01/backup/"+backup_dir+"'";
        }
        System.out.println(backup_dir);
        //String newLine = "\\\n";
        
        //String sql = "SELECT * FROM events INTO OUTFILE '"+backup_dir+"' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n'";
        
        System.out.print(sql);
       
        try {
            statement1 = conn_scheduler.createStatement();
            statement1.executeQuery(sql);
        } catch (SQLException ex) {
            Logger.getLogger(BackupDatabase.class.getName()).log(Level.SEVERE, null, ex);
        }finally
        {
            try {
                conn_scheduler.close();
            } catch (SQLException ex) {
                Logger.getLogger(BackupDatabase.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         
    }//GEN-LAST:event_backupSchedulerActionPerformed

    private void backup_primary_logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backup_primary_logActionPerformed
        // TODO add your handling code here:
        String sql = "",backup_dir = "";
         conn_scheduler = ConnectDB_scheduler.connectDb();
       
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd_hh_mm_ss");
        Date date = new Date();
        String today = dateFormat.format(date);
        String backup_format = (String)primary_log_backup_format.getSelectedItem();
        if(backup_format.equalsIgnoreCase("sql"))
        {
          backup_dir = today+"_events_scheduler.sql";  
          sql = "SELECT * FROM primary_log INTO OUTFILE '/u01/log/"+backup_dir+"'";
        }
        else if(backup_format.equalsIgnoreCase("text"))
        {
          backup_dir = today+"_events_scheduler.txt";  
          sql = "SELECT * FROM primary_log INTO OUTFILE '/u01/log/"+backup_dir+"'";
        }
        else if(backup_format.equalsIgnoreCase("csv"))
        {
          backup_dir = today+"_events_scheduler.csv";  
          sql = "SELECT * FROM primary_log INTO OUTFILE '/u01/log/"+backup_dir+"' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n'";
        }
        else
        {
          backup_dir = today+"_events_scheduler.csv";  
          sql = "SELECT * FROM primary_log INTO OUTFILE '/u01/log/"+backup_dir+"' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n'";
        }
        System.out.println(backup_dir);
        //String newLine = "\\\n";
        
        //String sql = "SELECT * FROM events INTO OUTFILE '"+backup_dir+"' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n'";
        
        System.out.print(sql);
       
        try {
            statement1 = conn_scheduler.createStatement();
            statement1.executeQuery(sql);
        } catch (SQLException ex) {
            Logger.getLogger(BackupDatabase.class.getName()).log(Level.SEVERE, null, ex);
        }finally
        {
            try {
                conn_scheduler.close();
            } catch (SQLException ex) {
                Logger.getLogger(BackupDatabase.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_backup_primary_logActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BackupDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BackupDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BackupDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BackupDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BackupDatabase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backupScheduler;
    private javax.swing.JButton backup_primary_log;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox<String> primary_log_backup_format;
    private javax.swing.JComboBox<String> schedule_backup_format;
    // End of variables declaration//GEN-END:variables
}
