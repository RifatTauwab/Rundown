/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rundown_v1;

import java.awt.Color;
import java.awt.Container;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import javax.swing.JFrame;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author DeeptoTV
 */
public class ExitLive extends javax.swing.JFrame {

    /**
     * Creates new form ExitLive
     */
  
    public ExitLive() throws Exception{
        initComponents();
      
    }
    String primary_server ="10.3.10.190";
    String secondary_server = "10.3.10.191";
    int port = 50007;
    PrintWriter out_primary,out_secondary;
    Socket socket_primary = null,socket_secondary=null;
	
    //Socket client = new Socket(primary_server, port);
    public synchronized void open_primary() throws UnknownHostException, IOException {
		
		socket_primary = new Socket(primary_server, port);
		out_primary = new PrintWriter(socket_primary.getOutputStream(), true);
		
	}
    public synchronized void open_secondary() throws UnknownHostException, IOException {
		
		socket_secondary = new Socket(secondary_server, port);
		out_secondary = new PrintWriter(socket_secondary.getOutputStream(), true);
		
	}
    public synchronized void close_primary() throws IOException {
		
		out_primary.close();	
		socket_primary.close();
		socket_primary = null;
		out_primary = null;
		
	}
    public synchronized void close_secondary() throws IOException {
		
		out_secondary.close();
		socket_secondary.close();
		socket_secondary = null;
		out_secondary = null;
		
	}
    public synchronized void runCommand_primary(String cmd) throws IOException {
		//open(); // connect if not already
		out_primary.println(new String(cmd.getBytes("UTF-8"))); // send command through socket
                //close();
    }
    public synchronized void runCommand_secondary(String cmd) throws IOException {
		//open(); // connect if not already
		out_secondary.println(new String(cmd.getBytes("UTF-8"))); // send command through socket
                //close();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        exitAllLive = new javax.swing.JButton();
        exitPrimaryLive = new javax.swing.JButton();
        exitSecondaryLive = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        exitAllLive.setText("Exit Live");
        exitAllLive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitAllLiveActionPerformed(evt);
            }
        });

        exitPrimaryLive.setText("exit primary live");
        exitPrimaryLive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitPrimaryLiveActionPerformed(evt);
            }
        });

        exitSecondaryLive.setText("exit secondary live");
        exitSecondaryLive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitSecondaryLiveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitAllLive, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(exitPrimaryLive, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(exitSecondaryLive, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exitSecondaryLive, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(exitPrimaryLive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitAllLive, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)))
                .addContainerGap(212, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitAllLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitAllLiveActionPerformed
        try {
            
            runCommand_primary("clear 1-10\r\n");
            runCommand_secondary("clear 1-10\r\n");
        } catch (IOException ex) {
            Logger.getLogger(ExitLive.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_exitAllLiveActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // TODO add your handling code here:
            open_primary();
        } catch (IOException ex) {
            Logger.getLogger(ExitLive.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            // TODO add your handling code here:
            open_secondary();
        } catch (IOException ex) {
            Logger.getLogger(ExitLive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            // TODO add your handling code here:
            close_primary();
            close_secondary();
        } catch (IOException ex) {
            Logger.getLogger(ExitLive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void exitPrimaryLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitPrimaryLiveActionPerformed
        // TODO add your handling code here:
        try {
            
            runCommand_primary("clear 1-10\r\n");
        } catch (IOException ex) {
            Logger.getLogger(ExitLive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exitPrimaryLiveActionPerformed

    private void exitSecondaryLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitSecondaryLiveActionPerformed
        // TODO add your handling code here:
        try {
            
            runCommand_secondary("clear 1-10\r\n");
        } catch (IOException ex) {
            Logger.getLogger(ExitLive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exitSecondaryLiveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExitLive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExitLive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExitLive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExitLive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ExitLive().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ExitLive.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitAllLive;
    private javax.swing.JButton exitPrimaryLive;
    private javax.swing.JButton exitSecondaryLive;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
